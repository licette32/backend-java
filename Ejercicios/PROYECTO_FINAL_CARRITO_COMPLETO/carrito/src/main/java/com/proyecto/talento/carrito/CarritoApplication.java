// Declaramos el paquete ra√≠z de nuestra aplicaci√≥n
package com.proyecto.talento.carrito;

// Importamos SpringApplication para ejecutar la aplicaci√≥n Spring Boot
import org.springframework.boot.SpringApplication;
// Importamos @SpringBootApplication que es la anotaci√≥n principal de Spring Boot
import org.springframework.boot.autoconfigure.SpringBootApplication;
// Importamos @EnableTransactionManagement para habilitar el manejo de transacciones
import org.springframework.transaction.annotation.EnableTransactionManagement;

// @SpringBootApplication es una anotaci√≥n que combina tres anotaciones importantes:
// - @Configuration: marca la clase como fuente de configuraci√≥n
// - @EnableAutoConfiguration: habilita la auto-configuraci√≥n de Spring Boot
// - @ComponentScan: escanea autom√°ticamente los componentes en este paquete y subpaquetes
@SpringBootApplication
// @EnableTransactionManagement habilita el manejo autom√°tico de transacciones
// Esto es importante para operaciones de base de datos que necesitan ser at√≥micas
@EnableTransactionManagement
// Clase principal que inicia toda la aplicaci√≥n Spring Boot del carrito de compras
public class CarritoApplication {

	// M√©todo main que es el punto de entrada de la aplicaci√≥n Java
	public static void main(String[] args) {
		// Mensaje informativo con emoji que se muestra al iniciar la aplicaci√≥n
		System.out.println("üöÄ Iniciando API Carrito de Compras - Talento Tech...");
		
		// SpringApplication.run() inicia la aplicaci√≥n Spring Boot
		// Toma la clase principal (CarritoApplication.class) y los argumentos de l√≠nea de comandos
		SpringApplication.run(CarritoApplication.class, args);
		
		// Mensaje que se muestra cuando la aplicaci√≥n se inicia correctamente
		System.out.println("‚úÖ API Carrito iniciada correctamente!");
		
		// Mensaje informativo sobre d√≥nde est√° disponible la aplicaci√≥n
		System.out.println("üìç Disponible en: http://localhost:8080");
		
		// Informaci√≥n sobre los endpoints principales de la API
		System.out.println("üìä Endpoints principales:");
		System.out.println("   ‚Ä¢ Clientes: http://localhost:8080/api/clientes");
		System.out.println("   ‚Ä¢ Art√≠culos: http://localhost:8080/api/articulos");
		System.out.println("   ‚Ä¢ Pedidos: http://localhost:8080/api/pedidos");
	}

}


